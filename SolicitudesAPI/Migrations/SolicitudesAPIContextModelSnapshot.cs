// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SolicitudesAPI.Models;

#nullable disable

namespace SolicitudesAPI.Migrations
{
    [DbContext(typeof(SolicitudesAPIContext))]
    partial class SolicitudesAPIContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SolicitudesAPI.Models.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyId"), 1L, 1);

                    b.Property<string>("CompanyDescription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LogoPath")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Nit")
                        .HasColumnType("int")
                        .HasColumnName("NIT");

                    b.Property<string>("WebSiteUrl")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("CompanyId");

                    b.ToTable("Company", (string)null);
                });

            modelBuilder.Entity("SolicitudesAPI.Models.Request", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RequestID");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentConditions")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ProductName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("QuerySearch")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("RequestDate")
                        .HasColumnType("date");

                    b.Property<string>("RequestStatus")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("RequestId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Request", (string)null);
                });

            modelBuilder.Entity("SolicitudesAPI.Models.Request", b =>
                {
                    b.HasOne("SolicitudesAPI.Models.Company", null)
                        .WithMany("Requests")
                        .HasForeignKey("CompanyId");

                    b.HasOne("SolicitudesAPI.Models.Company", "Company")
                        .WithOne("Request")
                        .HasForeignKey("SolicitudesAPI.Models.Request", "RequestId")
                        .IsRequired()
                        .HasConstraintName("FK_Request_CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("SolicitudesAPI.Models.Company", b =>
                {
                    b.Navigation("Request");

                    b.Navigation("Requests");
                });
#pragma warning restore 612, 618
        }
    }
}
